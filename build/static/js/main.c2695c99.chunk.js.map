{"version":3,"sources":["connectors/injected-connector.js","assets/logo.jpg","assets/icons.gif","connectors/address.ts","components/Buy.tsx","assets/metamask.svg","assets/wallet.svg","connectors/wallet-connect.ts","components/Connect.tsx","components/Salecard.tsx","pages/Home.tsx","App.tsx","connectors/use-eager-connector.ts","index.tsx"],"names":["injectedConnector","InjectedConnector","supportedChainIds","NFTContract","rpc","Buy","price","classes","UseStyle","useWeb3React","account","library","handleMint","a","getSigner","signer","contract","Contract","abi","mint","txResult","wait","toast","success","console","log","code","type","error","message","className","title1","title","style","textAlign","paddingTop","paddingBottom","display","flexDirection","justifyContent","alignItems","Button","onClick","color","sx","fontSize","height","backgroundColor","borderRadius","width","marginLeft","variant","makeStyles","theme","createStyles","fontWeight","RPC_URLS","walletconnect","WalletConnectConnector","chainId","bridge","qrcode","Connect","useState","isOpen","setIsOpen","switchNet","setSwitchNet","activate","handleMetamaskClick","result","handleWalletConnectClick","useEffect","length","switchNetwork","window","ethereum","request","method","params","name","Dialog","open","DialogTitle","Divider","DialogContent","dlg","Box","startIcon","src","mm","alt","btn","fullWidth","wc","DialogActions","padding","Salecard","mints","setMints","getMints","provider","JsonRpcProvider","on","totalSupply","mint2","Number","formatUnits","mint1","main","address","contractButton","endIcon","cost","backdropFilter","minHeight","boxShadow","textTransform","Home","Grid","container","spacing","item","xs","center","logo","md","icons","iconsInvert","footer","backgroundSize","background","marginTop","marginBottom","border","maxWidth","transform","marginRight","getLibrary","Web3Provider","pollingInterval","App","active","tried","setTried","isAuthorized","then","catch","useEagerConnect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2695c99.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport const injectedConnector = new InjectedConnector({\n  supportedChainIds: [\n   1,5,\n  ], \n});\n\nexport function activateInjectedProvider(providerName) {\n  const { ethereum } = window;\n\n  if (!ethereum?.providers) {\n      return undefined;\n  }\n\n  let provider;\n  switch (providerName) {\n      case 'CoinBase':\n          provider = ethereum.providers.find(({ isCoinbaseWallet}) => isCoinbaseWallet);\n          break;\n      case 'MetaMask':\n          provider = ethereum.providers.find(({ isMetaMask }) => isMetaMask);\n          break;\n      default:\n        break;\n  }\n\n  if (provider) {\n      ethereum.setSelectedProvider(provider);\n  }\n}","export default __webpack_public_path__ + \"static/media/logo.fd9bdca0.jpg\";","export default __webpack_public_path__ + \"static/media/icons.4c700558.gif\";","export const NFTContract = \"0x4E980F74bf07bf9481f00de2ce19FeC9c0aef274\";\nexport const rpc = \"https://eth-goerli.g.alchemy.com/v2/MPqkYg1sKvXh_9WIhnGqeMI2gGABJ0tB\";\nexport const chainId = \"0x5\";\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Chip, IconButton, Theme } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport RemoveCircleOutlinedIcon from \"@mui/icons-material/RemoveCircleOutlined\";\nimport AddCircleOutlinedIcon from \"@mui/icons-material/AddCircleOutlined\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { NFTContract } from \"../connectors/address\";\nimport abi from \"../abi/abi.json\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { toast } from \"react-toastify\";\nimport { rpc } from \"../connectors/address\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\ninterface Props {\n  price: number;\n}\nexport const Buy = ({ price }: Props) => {\n  const classes = UseStyle();\n  const { account, library } = useWeb3React<Web3Provider>();\n\n  \n\n  \n  const handleMint = async () => {\n    if (account && library) {\n      try {\n        const signer = await library.getSigner();\n        \n        const contract = new Contract(NFTContract, abi, signer);\n        const txResult = await contract.mint();\n        await txResult.wait();\n        toast.success(`1 CryptoBaby NFT minted successfully!`);\n      } catch (err: any) {\n        console.log(err);\n        if (err) {\n          if (err.code === -32000) {\n            toast(\"Insufficient Funds\", { type: \"error\" });\n          } else {\n            toast.error(err.message);\n            console.log(err.code);\n          }\n        } else {\n          if (err.code === 4001) {\n            toast.error(\"User denied transaction signature.\");\n          } else toast.error(\"Transaction Error\");\n        }\n      }\n    }\n  };\n  return (\n    <>\n      <div className={classes.title1}>\n        <span>\n          <b>Your Address : </b>\n          {account}{\" \"}\n        </span>\n      </div>\n      <div className={classes.title}>Click \"Mint NFT\" to mint your NFT.</div>\n\n      <Fragment>\n        <div\n          style={{\n            textAlign: \"center\",\n            paddingTop: \"8px\",\n            paddingBottom: \"16px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <Button\n            onClick={() => handleMint()}\n            color=\"primary\"\n            sx={{\n              fontSize: \"12px\",\n              height: \"36px\",\n              backgroundColor: \"#000\",\n              borderRadius: \"18px\",\n              width: \"150px\",\n              marginLeft: \"8px\",\n            }}\n            variant=\"contained\"\n          >\n            {\" \"}\n            Mint NFT\n          </Button> \n        </div>\n      </Fragment>\n    </>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n    },\n    title1: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n    },\n  })\n);\n","export default __webpack_public_path__ + \"static/media/metamask.e7705173.svg\";","export default __webpack_public_path__ + \"static/media/wallet.5d2458c6.svg\";","import { rpc } from './address';\n\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nconst RPC_URLS: { [chainId: number]: string } = {\n    5: rpc,1: rpc\n  }\nexport const walletconnect = new WalletConnectConnector({\n    rpc: RPC_URLS,\n    chainId: 1,\n    bridge: 'https://bridge.walletconnect.org',\n    qrcode: true\n  })","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Theme,\n  Box,\n} from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {  injectedConnector } from \"../connectors/injected-connector\";\nimport mm from \"../assets/metamask.svg\";\nimport wc from \"../assets/wallet.svg\"\nimport { walletconnect } from \"../connectors/wallet-connect\";\nimport {toast} from \"react-toastify\";\nimport { chainId } from \"../connectors/address\";\ndeclare global{\n  interface Window{\n    ethereum: any;\n  }\n}\nexport const Connect = () => {\n  const classes = UseStyle();\n  const [isOpen, setIsOpen] = useState(false);\n  const [switchNet, setSwitchNet] = useState(false);\n  const { activate, chainId, error, account, library} = useWeb3React();\n  const handleMetamaskClick = async () => {\n      const result = await activate(injectedConnector);\n      console.log(\"dhjhff\",result);\n      setIsOpen(false);\n  }\n\n  const handleWalletConnectClick = async () => {\n    await activate(walletconnect);\n    setIsOpen(false);\n}\nuseEffect(()=> {\n  console.log(account)\n  if(account && account !==\"\" && account.length > 0){\n    toast(`Wallet connected! \\n ${account}`,{type:\"success\"});\n  }\n}, [account]);\n\nconst switchNetwork = async () => {\n  await window.ethereum.request({\n    method: 'wallet_switchEthereumChain',\n    params: [{ chainId: \"0x1\" }],\n  });\n  toast(`Network Switched to Ethereum Mainnet`,{type:\"success\"});\n}\n\nuseEffect(() => {\n  if (error) {\n    console.log(error)\n    switch (error.name) {\n      case \"UnsupportedChainIdError\":\n        console.log(chainId);\n        toast(\"Unsupported network, Switch to ethereum\", {type: \"error\"})\n        setSwitchNet(true);\n        break;\n      case \"NoEthereumProviderError\":\n        toast(\"Please Install metamask.\", {type:\"error\"})\n        break;\n      case \"UserRejectedRequestError\":\n          toast(\"Connection request rejected.\", { type: \"warning\"})\n        break;\n      default:\n        \n        break;\n    }\n  }\n}, [error]);\n  \n  return (\n    <>\n      <div className={classes.title}>Connect to the Ethereum Mainnet Network.</div>\n      <div style={{ textAlign: \"center\", paddingTop: \"24px\" }}>\n        {\n          !switchNet ? (<Button\n            sx={{\n              borderRadius: 15,\n              backgroundColor: \"#000\",\n            }}\n            onClick={() => setIsOpen(true)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Connect{\" \"}\n          </Button>) : (<Button\n          sx={{\n            borderRadius: 15,\n            backgroundColor: \"#000\",\n          }}\n          onClick={switchNetwork}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Switch Network{\" \"}\n        </Button>)\n        }\n      </div>\n      <Dialog open={isOpen}>\n        <DialogTitle>Select Wallet</DialogTitle>\n        <Divider />\n        <DialogContent className={classes.dlg}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Button\n              startIcon={<img src={mm} alt=\"Metamask\" width={40} />}\n              className={classes.btn}\n              fullWidth\n              variant=\"text\"\n              onClick={handleMetamaskClick}\n            >\n              Metamask\n            </Button>\n            <Button\n              startIcon={<img src={wc} alt=\"Metamask\" width={40} />}\n              className={classes.btn}\n              fullWidth\n              variant=\"text\"\n              onClick={handleWalletConnectClick}\n            >\n              Wallet Connect\n            </Button>\n          </Box>\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n          <div>\n            <Button onClick={() => setIsOpen(false)}>Close</Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n      color: \"#ffffff !important\",\n    },\n    dlg: {\n      width: 450,\n      padding: 15,\n    },\n    btn: {\n      color: \"black !important\" as any,\n      fontSize: \"22px !important\" as any,\n    },\n  })\n);\n\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Theme } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { Buy } from \"./Buy\";\nimport { Connect } from \"./Connect\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport {NFTContract, rpc} from \"../connectors/address\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport abi from \"../abi/abi.json\";\nimport { formatUnits } from \"@ethersproject/units\";\nexport const Salecard = () => {\n  const [mints, setMints] = useState(0);\n  const { account, library  } = useWeb3React<Web3Provider>();\n\n    useEffect(() => {\n        const getMints = async () => {\n          const provider = new JsonRpcProvider(rpc);\n            const contract = new Contract(NFTContract, abi, provider );\n            console.log(contract)\n            contract.on(\"CreateCryptoBabyNFT\", async () => {\n                const mint2 = await contract.totalSupply();\n                setMints(Number(formatUnits(mint2, 0)));\n            });\n            const mint1 = await contract.totalSupply();\n            setMints(Number(formatUnits(mint1, 0)));\n            \n        }\n            getMints();\n    }, [])\n  const classes = UseStyle();\n  return (\n    <div className={classes.main}>\n      <div className={classes.title}>{mints} / 2100</div>\n      <div className={classes.address}>\n        <Button\n          className={classes.contractButton}\n          variant=\"text\"\n          endIcon={<OpenInNewIcon />}\n          onClick={() => window.open(`https://etherscan.com/token/${NFTContract}`, \"_blank\")}\n        >\n          NFT Contract\n        </Button>\n      </div>\n      <div className={classes.cost}>1 Free NFT per wallet.</div>\n\n     {!account &&  <Connect />}\n      {account && <Buy price={0} />}\n    </div>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: \"rgba(170, 170, 170, 0.4) !important\",\n      backdropFilter: \"blur(5px) !important\",\n      borderRadius: \"16px\",\n      minHeight: \"360px\",\n      boxShadow: \"rgba(38, 122, 69, 0.55) 0px 0px 35px;\",\n    },\n    title: {\n      paddingTop: \"32px\",\n      fontWeight: \"600\",\n      fontSize: \"48px\",\n      textAlign: \"center\",\n      color:\"white\"\n    },\n    address: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n      textTransform: \"capitalize\",\n    },\n    cost: {\n      paddingTop: \"24px\",\n      fontWeight: \"600\",\n      fontSize: \"18px\",\n      textAlign: \"center\",\n      color: \"#ffffff !important\",\n    },\n    contractButton: {\n      textTransform: \"capitalize !important\" as any,\n      color: \"#ffffff !important\",\n    },\n  })\n);\n","import { Grid, Theme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport logo from \"../assets/logo.jpg\";\nimport icons from \"../assets/icons.gif\";\nimport { Salecard } from \"../components/Salecard\";\nexport const Home = () => {\n  const classes = UseStyle();\n  return (\n    <div className={classes.main}>\n      <div\n        style={{ width: \"100%\", height: \"100%\", backdropFilter: \"blur(16px)\" }}\n      >\n        <Grid  container spacing={2}>\n          <Grid item className=\"top\" xs={12}>\n            <div className={classes.center}>\n              <img src={logo} alt=\"logo\" className={classes.logo} />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <div className={classes.center}>\n              <img src={icons} alt=\"logo\" className={classes.icons} />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Salecard />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <div className={classes.center}>\n              <img src={icons} alt=\"logo\" className={classes.iconsInvert} />\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.center}>\n              <div style={{ color: \"white\" }} className={classes.footer}>\n                Please make sure you are connected to the right network\n                (Ethereum Mainnet) and the correct address. Please note: Once\n                you make the purchase, you cannot undone the action.\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) => ({\n  main: {\n    width: \"100%\",\n    minHeight: \"100vh\",\n    backgroundSize: \"cover\",\n    background:\n      \"radial-gradient(circle, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%)\",\n    marginTop: 16,\n  },\n  center: {\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n  logo: {\n    width: \"270px\",\n    height: \"270px\",\n    borderRadius: \"50%\",\n    marginTop: \"48px\",\n    marginBottom: \"40px\",\n    boxShadow: \"rgba(0, 0, 0, 0.75) 0px 5px 15px;\",\n    border: \"1px solid #ffffff60\",\n  },\n  icons: {\n    maxWidth: \"260px\",\n    height: \"auto\",\n    borderRadius: \"50%\",\n    marginTop: \"40px\",\n    border: \"1px solid #ffffff20\",\n    backgroundColor: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.75) 0px 5px 15px;\",\n  },\n  iconsInvert: {\n    maxWidth: \"260px\",\n    height: \"auto\",\n    borderRadius: \"50%\",\n    marginTop: \"40px\",\n    border: \"1px solid #ffffff20\",\n    transform: \"scaleX(-1)\",\n    backgroundColor: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.75) 0px 5px 15px;\",\n  },\n  footer: {\n    maxWidth: \"840px\",\n    color: \"#ffffff\",\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: \"16px\",\n  },\n}));\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport { useEagerConnect } from \"./connectors/use-eager-connector\";\nimport { Home } from \"./pages/Home\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction getLibrary(provider: any) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\nfunction App() {\n  useEagerConnect();\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ToastContainer />\n      <Home />\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { injectedConnector } from \"./injected-connector\";\n\nexport function useEagerConnect() {\n\n    \n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injectedConnector.isAuthorized().then((isAuthorized) => {\n        \n      if (isAuthorized) {\n        activate(injectedConnector).catch((error) => {\n            console.log(\"error\", error);\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); \n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}